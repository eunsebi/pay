<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!--<util:properties id="db" location="classpath:config/jdbc-real.properties" />-->

	<context:property-placeholder location="classpath:config/*.properties" />

	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.*(..))"></aop:pointcut>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"></aop:advisor>
	</aop:config>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 트랜잭셔널 의미(the transactional semantics)... -->
		<tx:attributes>
			<!-- 'get'으로 시작하는 모든 메서드들은 읽기전용이다 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" timeout="30"></tx:method>
			<!-- <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"></tx:method> -->
			<!-- 다름 메서드들은 기본 트랜잭션 설정을 사용한다. (아래를 참고) -->
			<tx:method name="*" propagation="REQUIRED"></tx:method>
		</tx:attributes>
	</tx:advice>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:log4jdbc:mysql://ekkor.ze.am/myintranet?useUnicode=true&amp;charaterEncoding=UTF-8" />
		<property name="username" value="ekkor" />
		<property name="password" value="ekkor123" />
		<property name="validationQuery" value="select 1"></property>
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
	</bean>-->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="select 1"></property>
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlmap/mybatis.xml" />
		<property name="mapperLocations" value="classpath:sqlmap/*/*.xml" />
	</bean>


	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

</beans>
